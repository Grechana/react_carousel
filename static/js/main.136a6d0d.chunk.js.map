{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scrollPosition","itemWidth","props","frameSize","step","animationDuration","updateInput","event","target","name","value","setState","prevState","handleNextClick","totalItems","images","length","handlePrevClick","maxScrollPosition","this","className","htmlFor","type","id","min","required","onChange","style","width","transitionDuration","map","img","transform","src","alt","slice","onClick","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.136a6d0d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  scrollPosition: number;\n  // infinite: boolean\n};\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    scrollPosition: 0,\n    itemWidth: this.props.itemWidth,\n    frameSize: this.props.frameSize,\n    step: this.props.step,\n    animationDuration: this.props.animationDuration,\n  };\n\n  updateInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n    } = event.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  handleNextClick = () => {\n    const {\n      step,\n      itemWidth,\n      scrollPosition,\n    } = this.state;\n\n    const { images } = this.props;\n    const totalItems = images.length;\n    const maxScrollPosition = itemWidth * (totalItems - step);\n\n    if (scrollPosition < maxScrollPosition) {\n      this.setState((prevState) => ({\n        scrollPosition: prevState.scrollPosition + itemWidth * step,\n      }));\n    }\n  };\n\n  handlePrevClick = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n    } = this.props;\n\n    const { scrollPosition } = this.state;\n    const { images } = this.props;\n    const totalItems = images.length;\n    const maxScrollPosition = itemWidth * (totalItems - frameSize);\n\n    if (scrollPosition > 0) {\n      this.setState((prevState) => ({\n        scrollPosition: prevState.scrollPosition - itemWidth * step,\n      }));\n    } else {\n      this.setState({ scrollPosition: maxScrollPosition });\n    }\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      scrollPosition,\n    } = this.state;\n\n    return (\n      <>\n        <h1 data-cy=\"title\">\n          {`Carousel with ${step} images`}\n        </h1>\n        <div className=\"Carousel__Form\">\n          <form>\n            <label htmlFor=\"itemId\">\n              ItemWidth:\n              <input\n                type=\"number\"\n                id=\"itemId\"\n                min=\"1\"\n                value={itemWidth}\n                name=\"itemWidth\"\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n            <label htmlFor=\"frameId\">\n              frameSize\n              <input\n                type=\"number\"\n                id=\"frameId\"\n                min=\"1\"\n                name=\"frameSize\"\n                value={frameSize}\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n            <label htmlFor=\"stepId\">\n              step\n              <input\n                type=\"number\"\n                id=\"stepId\"\n                min=\"1\"\n                name=\"step\"\n                value={step}\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n            <label htmlFor=\"animationId\">\n              animationDuration\n              <input\n                type=\"number\"\n                id=\"animationId\"\n                min=\"1\"\n                name=\"animationDuration\"\n                value={animationDuration}\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n          </form>\n        </div>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * frameSize}px`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map(img => (\n              <li\n                key={img}\n                style={{\n                  transform: `translateX(-${scrollPosition}px)`,\n                }}\n              >\n                <img\n                  src={img}\n                  alt={img.slice(6, 7)}\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <button\n            type=\"button\"\n            onClick={this.handlePrevClick}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.handleNextClick}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}