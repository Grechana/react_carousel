{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","handleButton","step","props","frameSize","images","lastIndex","length","nextIndex","setState","this","itemWidth","animationDuration","className","style","width","animation","map","image","transition","transform","src","alt","slice","type","onClick","disabled","Component","App","updateInput","event","target","name","value","prevState","htmlFor","id","min","required","onChange","max","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdeeccce.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  currentItemIndex: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  handleButton = (step: number) => () => {\n    const { frameSize, images } = this.props;\n    const { currentItemIndex } = this.state;\n    const lastIndex = images.length - frameSize;\n    const firstIndex = 0;\n    let nextIndex = currentItemIndex + step;\n\n    if (step > 0) {\n      if (currentItemIndex === lastIndex) {\n        nextIndex = firstIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = lastIndex;\n      }\n    }\n\n    if (step < 0) {\n      if (currentItemIndex === firstIndex) {\n        nextIndex = lastIndex;\n      } else if (nextIndex < firstIndex) {\n        nextIndex = firstIndex;\n      }\n    }\n\n    this.setState(() => ({\n      currentItemIndex: nextIndex,\n    }));\n  };\n\n  render() {\n    const {\n      step,\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { currentItemIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          animation: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li\n              key={image.slice(6, 7)}\n              style={{\n                transition: `${animationDuration}ms`,\n                transform: `translateX(${-currentItemIndex * itemWidth}px)`,\n              }}\n            >\n              <img\n                className=\"Carousel__image\"\n                src={image}\n                alt={image.slice(6, 7)}\n                width={itemWidth}\n                style={{\n                  transition: `${animationDuration}ms`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handleButton(-step)}\n            disabled={currentItemIndex <= 0}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__button next\"\n            disabled={currentItemIndex >= images.length - frameSize}\n            onClick={this.handleButton(step)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Carousel };\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  updateInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value,\n    } = event.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${frameSize} images`}\n        </h1>\n        <div className=\"Carousel__Form\">\n          <form>\n            <label\n              htmlFor=\"itemId\"\n            >\n              Item Width:\n              <input\n                type=\"number\"\n                id=\"itemId\"\n                min=\"1\"\n                value={itemWidth}\n                name=\"itemWidth\"\n                required\n                onChange={this.updateInput}\n                className=\"Carousel__Form-input\"\n              />\n            </label>\n            <label htmlFor=\"frameId\">\n              Frame Size:\n              <input\n                type=\"number\"\n                id=\"frameId\"\n                min=\"1\"\n                name=\"frameSize\"\n                value={frameSize}\n                max={images.length}\n                required\n                onChange={this.updateInput}\n                className=\"Carousel__Form-input\"\n              />\n            </label>\n            <label htmlFor=\"stepId\">\n              Step:\n              <input\n                type=\"number\"\n                id=\"stepId\"\n                min=\"1\"\n                name=\"step\"\n                value={step}\n                max={images.length}\n                required\n                onChange={this.updateInput}\n                className=\"Carousel__Form-input\"\n              />\n            </label>\n            <label htmlFor=\"animationId\">\n              Animation Duration\n              <input\n                type=\"number\"\n                id=\"animationId\"\n                min=\"1\"\n                name=\"animationDuration\"\n                value={animationDuration}\n                required\n                onChange={this.updateInput}\n                className=\"Carousel__Form-input\"\n              />\n            </label>\n          </form>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}