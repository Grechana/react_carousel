{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemWidth","frameSize","step","animationDuration","infinite","scrollPosition","updateInput","event","target","name","value","setState","prevState","handleNextClick","totalItems","props","images","length","handlePrevClick","maxScrollPosition","this","className","htmlFor","type","id","min","required","onChange","style","width","transitionDuration","map","img","transform","src","alt","slice","disabled","onClick","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"uQAgBMA,E,4MACJC,MAAQ,CACNC,UAAW,IACXC,UAAW,EACXC,KAAM,EACNC,kBAAmB,IACnBC,UAAU,EACVC,eAAgB,G,EAGlBC,YAAc,SAACC,GACb,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,kBAEXH,GAASC,Q,EAIdG,gBAAkB,WAChB,MAKI,EAAKd,MAJPG,EADF,EACEA,KACAF,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAI,EAJF,EAIEA,eAGIS,EADa,EAAKC,MAAhBC,OACkBC,OAGtBZ,EAFsBL,GAAac,EAAab,GAGlD,EAAKU,UAAS,SAACC,GAAD,MAAgB,CAC5BP,eAAgBO,EAAUP,eAAiBL,EAAYE,MAGzD,EAAKS,SAAS,CAAEN,eAAgB,K,EAIpCa,gBAAkB,WAChB,MAKI,EAAKnB,MAJPG,EADF,EACEA,KACAF,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAI,EAJF,EAIEA,eAGIS,EADa,EAAKC,MAAhBC,OACkBC,OACpBE,EAAoBnB,GAAac,EAAab,GAEhDI,EAAiB,EACnB,EAAKM,UAAS,SAACC,GAAD,MAAgB,CAC5BP,eAAgBO,EAAUP,eAAiBL,EAAYE,MAGzD,EAAKS,SAAS,CAAEN,eAAgBc,K,4CAIpC,WACE,IAAQH,EAAWI,KAAKL,MAAhBC,OACR,EAOII,KAAKrB,MANPC,EADF,EACEA,UACAE,EAFF,EAEEA,KACAD,EAHF,EAGEA,UACAE,EAJF,EAIEA,kBACAC,EALF,EAKEA,SACAC,EANF,EAMEA,eAGF,OACE,sBAAKgB,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCACoBnB,EADpB,aAIA,qBAAKmB,UAAU,iBAAf,SACE,iCACE,wBAAOC,QAAQ,SAAf,uBAEE,uBACEC,KAAK,SACLC,GAAG,SACHC,IAAI,IACJhB,KAAK,YACLiB,UAAQ,EACRC,SAAUP,KAAKd,iBAGnB,wBAAOgB,QAAQ,UAAf,sBAEE,uBACEC,KAAK,SACLC,GAAG,UACHC,IAAI,IACJhB,KAAK,YACLiB,UAAQ,EACRC,SAAUP,KAAKd,iBAGnB,wBAAOgB,QAAQ,SAAf,iBAEE,uBACEC,KAAK,SACLC,GAAG,SACHC,IAAI,IACJhB,KAAK,OACLiB,UAAQ,EACRC,SAAUP,KAAKd,iBAGnB,wBAAOgB,QAAQ,cAAf,8BAEE,uBACEC,KAAK,SACLC,GAAG,cACHC,IAAI,IACJhB,KAAK,oBACLiB,UAAQ,EACRC,SAAUP,KAAKd,sBAMvB,sBAAKe,UAAU,WAAf,UACE,oBACEA,UAAU,iBACVO,MAAO,CACLC,MAAM,GAAD,OAAK7B,EAAYC,EAAjB,MACL6B,mBAAmB,GAAD,OAAK3B,EAAL,OAJtB,SAOGa,EAAOe,KAAI,SAAAC,GAAG,OAEb,oBAEEJ,MAAO,CACLK,UAAU,eAAD,OAAiB5B,EAAjB,QAHb,SAME,qBACE6B,IAAKF,EACLG,IAAKH,EAAII,MAAM,EAAG,GAClBP,MAAO7B,KARJgC,QAcX,wBACET,KAAK,SACLc,UAAWjC,EACXkC,QAASlB,KAAKF,gBAHhB,kBAOA,wBACEK,KAAK,SACL,UAAQ,OACRc,UAAWjC,EACXkC,QAASlB,KAAKP,gBAJhB,4B,GA7Ja0B,aA2KRzC,ICnLT0C,E,4MACJzC,MAAQ,CACNiB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWI,KAAKrB,MAAhBiB,OAER,OACE,cAAC,EAAD,CAAUA,OAAQA,Q,GApBNyB,IAAMF,WAyBTC,IC9BfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ea422f9a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration:number;\n  infinite: boolean;\n  scrollPosition: number;\n};\n\ntype Props = {\n  images: string[];\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: true,\n    scrollPosition: 0,\n  };\n\n  updateInput = (event:React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: (+value),\n    }));\n  };\n\n  handleNextClick = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      scrollPosition,\n    } = this.state;\n    const { images } = this.props;\n    const totalItems = images.length;\n    const maxScrollPosition = itemWidth * (totalItems - frameSize);\n\n    if (scrollPosition < maxScrollPosition) {\n      this.setState((prevState) => ({\n        scrollPosition: prevState.scrollPosition + itemWidth * step,\n      }));\n    } else {\n      this.setState({ scrollPosition: 0 });\n    }\n  };\n\n  handlePrevClick = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      scrollPosition,\n    } = this.state;\n    const { images } = this.props;\n    const totalItems = images.length;\n    const maxScrollPosition = itemWidth * (totalItems - frameSize);\n\n    if (scrollPosition > 0) {\n      this.setState((prevState) => ({\n        scrollPosition: prevState.scrollPosition - itemWidth * step,\n      }));\n    } else {\n      this.setState({ scrollPosition: maxScrollPosition });\n    }\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      itemWidth,\n      step,\n      frameSize,\n      animationDuration,\n      infinite,\n      scrollPosition,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${step} images`}\n        </h1>\n\n        <div className=\"Carousel__Form\">\n          <form>\n            <label htmlFor=\"itemId\">\n              ItemWidth:\n              <input\n                type=\"number\"\n                id=\"itemId\"\n                min=\"1\"\n                name=\"itemWidth\"\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n            <label htmlFor=\"frameId\">\n              frameSize\n              <input\n                type=\"number\"\n                id=\"frameId\"\n                min=\"1\"\n                name=\"frameSize\"\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n            <label htmlFor=\"stepId\">\n              step\n              <input\n                type=\"number\"\n                id=\"stepId\"\n                min=\"1\"\n                name=\"step\"\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n            <label htmlFor=\"animationId\">\n              animationDuration\n              <input\n                type=\"number\"\n                id=\"animationId\"\n                min=\"1\"\n                name=\"animationDuration\"\n                required\n                onChange={this.updateInput}\n              />\n            </label>\n\n          </form>\n        </div>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${itemWidth * frameSize}px`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map(img => (\n\n              <li\n                key={img}\n                style={{\n                  transform: `translateX(-${scrollPosition}px)`,\n                }}\n              >\n                <img\n                  src={img}\n                  alt={img.slice(6, 7)}\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <button\n            type=\"button\"\n            disabled={!infinite}\n            onClick={this.handlePrevClick}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            disabled={!infinite}\n            onClick={this.handleNextClick}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <Carousel images={images} />\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}